{"version":3,"file":"static/js/964.9cdd9c2b.chunk.js","mappings":"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","sources":["api/moviesAPI.js","components/MovieDetails/MovieInfo.styled.js","components/Reviews/Reviews.js","pages/ReviewsPage.jsx","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = '7ff77d6c83d2307b93a470517dba345c';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: { api_key: apiKey },\n});\n\nexport const trendMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get(`/search/movie?query=${query}`);\n  return data;\n};\n\nexport const getMovieInfo = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews`);\n  return data;\n};\n","import styled from 'styled-components';\n\nconst InfoStyled = styled.div`\n  padding-bottom: 15px;\n  padding-top: 15px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  max-width: 800px;\n`;\nexport default InfoStyled;\n","import React, { useState } from 'react';\nimport InfoStyled from 'components/MovieDetails/MovieInfo.styled';\nimport { nanoid } from 'nanoid';\n\nconst Reviews = ({ data }) => {\n  const [expandedStates, setExpandedStates] = useState(data.map(() => false));\n\n  const toggleExpand = index => {\n    setExpandedStates(prevStates =>\n      prevStates.map((state, i) => (i === index ? !state : state))\n    );\n  };\n\n  return data.map(({ author, content }, index) => (\n    <InfoStyled\n      key={nanoid()}\n      style={{ padding: '20px', background: '#3bffc514', position: 'relative' }}\n    >\n      <h4>Author: {author}</h4>\n      <p\n        style={{\n          width: '350px',\n          overflow: expandedStates[index] ? 'visible' : 'hidden',\n          display: '-webkit-box',\n          WebkitLineClamp: expandedStates[index] ? 'none' : '2',\n          WebkitBoxOrient: 'vertical',\n          textOverflow: expandedStates[index] ? 'unset' : 'ellipsis',\n          lineHeight: '1.5em',\n          maxHeight: expandedStates[index] ? 'none' : '3em',\n          margin: 0,\n        }}\n      >\n        {content}\n      </p>\n      <button\n        style={{\n          padding: '5px 10px',\n          backgroundColor: '#007BFF',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          maxWidth: '200px',\n          position: 'absolute',\n          top: '20px',\n          right: '20px',\n        }}\n        onClick={() => toggleExpand(index)}\n      >\n        {expandedStates[index] ? 'Hide' : 'Read Full Review'}\n      </button>\n    </InfoStyled>\n  ));\n};\n\nexport default Reviews;\n","import { getReviews } from 'api/moviesAPI';\nimport AppLoader from 'components/Loader/Loader';\nimport Reviews from 'components/Reviews/Reviews';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst ReviewsPage = () => {\n  const [reviewsData, setReviewsData] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoader(true);\n    const getApi = async () => {\n      try {\n        const { results } = await getReviews(movieId);\n\n        setReviewsData(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoader(false);\n      }\n    };\n    movieId && getApi();\n  }, [movieId]);\n\n  return (\n    <>\n      {loader && <AppLoader />}\n      {error && <p>{error}</p>}\n      {reviewsData.length ? (\n        <Reviews data={reviewsData} />\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n};\nexport default ReviewsPage;\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n"],"names":["instance","axios","baseURL","params","api_key","trendMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$instance$get","data","_context","prev","next","get","sent","abrupt","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_yield$instance$get2","_context2","concat","_x","getMovieInfo","_ref3","_callee3","movieId","_yield$instance$get3","_context3","_x2","getCast","_ref4","_callee4","_yield$instance$get4","_context4","_x3","getReviews","_ref5","_callee5","_yield$instance$get5","_context5","_x4","InfoStyled","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","map","_useState2","_slicedToArray","expandedStates","setExpandedStates","index","author","content","_jsxs","style","padding","background","position","children","_jsx","width","overflow","display","WebkitLineClamp","WebkitBoxOrient","textOverflow","lineHeight","maxHeight","margin","backgroundColor","color","border","borderRadius","cursor","maxWidth","top","right","onClick","prevStates","state","i","toggleExpand","nanoid","reviewsData","setReviewsData","_useState3","_useState4","loader","setLoader","_useState5","_useState6","error","setError","useParams","useEffect","getApi","_yield$getReviews","results","t0","message","finish","_Fragment","AppLoader","length","Reviews","urlAlphabet","size","undefined","id","bytes","crypto","getRandomValues","Uint8Array"],"sourceRoot":""}