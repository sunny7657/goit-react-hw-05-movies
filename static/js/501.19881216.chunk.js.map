{"version":3,"file":"static/js/501.19881216.chunk.js","mappings":"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","sources":["api/moviesAPI.js","components/App/App.styled.js","components/Container/Container.styled.js","components/GridItem/GridItem.jsx","components/Grid/GridContainer.styled.js","components/Grid/Grid.jsx","components/MovieDetails/MovieInfo.styled.js","components/Poster/Poster.jsx","components/Form/FormSearchMovies.js","pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = '7ff77d6c83d2307b93a470517dba345c';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: { api_key: apiKey },\n});\n\nexport const trendMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get(`/search/movie?query=${query}`);\n  return data;\n};\n\nexport const getMovieInfo = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews`);\n  return data;\n};\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  margin-top: 44px;\n  padding-bottom: 15px;\n  padding-top: 15px;\n  width: 100%;\n`;\n\nexport const ContainerApp = styled.div`\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n\n  padding: 15px;\n  box-shadow: 0px 1px 5px #98ced5;\n`;\n\nexport default Container;\n","import { Link, useLocation } from 'react-router-dom';\nimport { ListItem } from '@mui/joy';\nimport Container from 'components/Container/Container.styled';\nimport Poster from 'components/Poster/Poster';\nimport InfoStyled from 'components/MovieDetails/MovieInfo.styled';\n\nconst GridItem = ({ title, poster_path, release_date, vote_average, id }) => {\n  const location = useLocation();\n  const releaseDate = release_date.slice(0, 4);\n\n  return (\n    <ListItem>\n      <Link\n        to={`/movies/${id}`}\n        state={location}\n        style={{ color: '#405164', width: '100%' }}\n      >\n        <Container style={{ height: '225px', alignItems: 'center' }}>\n          <Poster poster_path={poster_path} width={150} />\n          <InfoStyled>\n            <h2>\n              {title} ({releaseDate})\n            </h2>\n            <p>User Score: {Math.round(vote_average * 10)}% </p>\n          </InfoStyled>\n        </Container>\n      </Link>\n    </ListItem>\n  );\n};\nexport default GridItem;\n","import styled from '@emotion/styled';\n\nexport const GridContainer = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 16px;\n  margin-top: 20px;\n`;\n","import GridItem from 'components/GridItem/GridItem';\nimport { GridContainer } from './GridContainer.styled';\n\nconst Grid = ({ data }) => {\n  return (\n    <GridContainer>\n      {data.map(({ title, poster_path, release_date, vote_average, id }) => (\n        <GridItem\n          title={title}\n          poster_path={poster_path}\n          release_date={release_date}\n          vote_average={vote_average}\n          key={id}\n          id={id}\n        />\n      ))}\n    </GridContainer>\n  );\n};\n\nexport default Grid;\n","import styled from 'styled-components';\n\nconst InfoStyled = styled.div`\n  padding-top: 15px;\n  padding-bottom: 15px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\nexport default InfoStyled;\n","import React from 'react';\n\nconst Poster = ({ poster_path, width }) => {\n  const defaultImg =\n    'https://i.pinimg.com/736x/43/40/15/434015fb4a55358e5e14cee3564b9c44.jpg';\n  return (\n    <img\n      src={\n        poster_path\n          ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n          : defaultImg\n      }\n      width={width}\n      alt=\"poster\"\n    />\n  );\n};\n\nexport default Poster;\n","import { Button, Input } from '@mui/joy';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst FormSearchMovies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const [, setSearchParams] = useSearchParams();\n\n  const handleInputChange = ({ target: { value } }) => {\n    setSearchQuery(value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: searchQuery });\n    setSearchQuery('');\n  };\n\n  return (\n    <form\n      onSubmit={handleFormSubmit}\n      style={{ width: '50%', minWidth: '250px' }}\n    >\n      <Input\n        name=\"search\"\n        type=\"text\"\n        placeholder=\"Search movie\"\n        value={searchQuery}\n        onChange={handleInputChange}\n        endDecorator={\n          <Button variant={'soft'} size=\"sm\" type=\"submit\">\n            Search\n          </Button>\n        }\n      />\n    </form>\n  );\n};\n\nexport default FormSearchMovies;\n","import { searchMovies } from 'api/moviesAPI';\nimport { ContainerApp, Section } from 'components/App/App.styled';\nimport FormSearchMovies from 'components/Form/FormSearchMovies';\nimport Grid from 'components/Grid/Grid';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [queryData, setQueryData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isEmpty, setIsEmpty] = useState(false);\n\n  const [searchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    const getFilms = async query => {\n      try {\n        const { results } = await searchMovies(query);\n        if (!results.length) {\n          setIsEmpty(true);\n          setQueryData(null);\n          return;\n        }\n        setIsEmpty(false);\n        setQueryData(results);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    query && getFilms(query);\n  }, [searchParams]);\n\n  return (\n    <Section>\n      <ContainerApp>\n        {error && <p>{error}</p>}\n        <FormSearchMovies />\n        {queryData && <Grid data={queryData} />}\n        {isEmpty && (\n          <p style={{ paddingBottom: '15px', paddingTop: '15px' }}>\n            No matches found...\n          </p>\n        )}\n      </ContainerApp>\n    </Section>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["instance","axios","baseURL","params","api_key","trendMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$instance$get","data","_context","prev","next","get","sent","abrupt","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_yield$instance$get2","_context2","concat","_x","getMovieInfo","_ref3","_callee3","movieId","_yield$instance$get3","_context3","_x2","getCast","_ref4","_callee4","_yield$instance$get4","_context4","_x3","getReviews","_ref5","_callee5","_yield$instance$get5","_context5","_x4","Section","styled","_templateObject","_taggedTemplateLiteral","ContainerApp","_templateObject2","Container","title","poster_path","release_date","vote_average","id","location","useLocation","releaseDate","slice","_jsx","ListItem","children","Link","to","state","style","color","width","_jsxs","height","alignItems","Poster","InfoStyled","Math","round","GridContainer","map","GridItem","src","alt","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useSearchParams","useSearchParams","setSearchParams","onSubmit","e","preventDefault","minWidth","Input","name","type","placeholder","value","onChange","target","endDecorator","Button","variant","size","queryData","setQueryData","_useState3","_useState4","error","setError","_useState5","_useState6","isEmpty","setIsEmpty","searchParams","useEffect","getFilms","_yield$searchMovies","results","length","t0","message","FormSearchMovies","Grid","paddingBottom","paddingTop"],"sourceRoot":""}