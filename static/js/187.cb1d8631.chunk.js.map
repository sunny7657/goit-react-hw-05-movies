{"version":3,"file":"static/js/187.cb1d8631.chunk.js","mappings":"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","sources":["api/moviesAPI.js","components/Container/Container.styled.js","components/MovieDetails/MovieInfo.styled.js","components/Cast/Cast.js","pages/CastPage.jsx","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = '7ff77d6c83d2307b93a470517dba345c';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: { api_key: apiKey },\n});\n\nexport const trendMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get(`/search/movie?query=${query}`);\n  return data;\n};\n\nexport const getMovieInfo = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews`);\n  return data;\n};\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  padding: 15px;\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n  box-shadow: 0px 1px 5px #98ced5;\n`;\nexport default Container;\n","import styled from 'styled-components';\n\nconst InfoStyled = styled.div`\n  padding-bottom: 15px;\n  padding-top: 15px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\nexport default InfoStyled;\n","import Container from 'components/Container/Container.styled';\nimport InfoStyled from 'components/MovieDetails/MovieInfo.styled';\nimport { nanoid } from 'nanoid';\n\nconst Cast = ({ data }) => {\n  const defaultImg = 'https://i.stack.imgur.com/34AD2.jpg';\n\n  return data.map(({ profile_path, name, character }) => (\n    <Container key={nanoid()}>\n      <img\n        src={\n          profile_path\n            ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n            : defaultImg\n        }\n        width={100}\n        alt=\"poster\"\n      />\n      <InfoStyled>\n        <p>{name}</p>\n        <p>Character: {character ? character : '-'}</p>\n      </InfoStyled>\n    </Container>\n  ));\n};\nexport default Cast;\n","import { getCast } from 'api/moviesAPI';\nimport Cast from 'components/Cast/Cast';\nimport AppLoader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst CastPage = () => {\n  const [castData, setCastData] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoader(true);\n    const getApi = async () => {\n      try {\n        const { cast } = await getCast(movieId);\n        setCastData(cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoader(false);\n      }\n    };\n    movieId && getApi();\n  }, [movieId]);\n\n  return (\n    <>\n      {loader && <AppLoader />}\n      {error && <p>{error}</p>}\n      {castData && <Cast data={castData} />}\n    </>\n  );\n};\n\nexport default CastPage;\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n"],"names":["instance","axios","baseURL","params","api_key","trendMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$instance$get","data","_context","prev","next","get","sent","abrupt","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_yield$instance$get2","_context2","concat","_x","getMovieInfo","_ref3","_callee3","movieId","_yield$instance$get3","_context3","_x2","getCast","_ref4","_callee4","_yield$instance$get4","_context4","_x3","getReviews","_ref5","_callee5","_yield$instance$get5","_context5","_x4","Container","styled","_templateObject","_taggedTemplateLiteral","InfoStyled","map","profile_path","name","character","_jsxs","children","_jsx","src","width","alt","nanoid","_useState","useState","_useState2","_slicedToArray","castData","setCastData","_useState3","_useState4","loader","setLoader","_useState5","_useState6","error","setError","useParams","useEffect","getApi","_yield$getCast","cast","t0","message","finish","_Fragment","AppLoader","Cast","urlAlphabet","size","length","undefined","id","bytes","crypto","getRandomValues","Uint8Array"],"sourceRoot":""}